<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">
    <!--Fail dlya opredeleniya inertsii, tam zhyoskie formuli-->
        <xacro:include filename="inertial_macros.xacro" />
    <!-- Massa chastei robota -->
        <!-- Telo -->
         <xacro:property name="mass_body" value="20"/>
        <!-- Zadnie kolyosa -->
        <xacro:property name="mass_back_wheel" value="2.5"/>
        <!-- Perednie kolyosa -->
        <xacro:property name="mass_front_wheel" value="1"/>
        <!-- Osi vrascheniya dlya perednih kolyos -->
        <xacro:property name="mass_front_joint" value="0.1"/>
    <!-- Opredelenie konstant robota -->
        <!-- Telo -->
        <xacro:property name="body_length" value="0.75"/>
        <xacro:property name="body_width" value="0.43"/>
        <xacro:property name="body_height" value="0.10"/>

        
        <xacro:property name="body_up_length" value="0.60"/>
        <xacro:property name="body_up_width" value="0.43"/>
        <xacro:property name="body_up_height" value="0.26"/>
        <!-- Kolyosa zadnie -->
        <xacro:property name="wheel_diameter" value="0.25"/>
        <xacro:property name="wheel_width" value="0.06"/>
        <xacro:property name="wheel_ygap" value="0.025"/>
        <xacro:property name="wheel_zoff" value="0.1"/>
        <xacro:property name="wheel_xoff" value="0.12"/>
        <!-- Kolyosa perednie -->
        <xacro:property name="wheel_diameter_front" value="0.12"/>
        <xacro:property name="wheel_width_front" value="0.025"/>
        <xacro:property name="wheel_ygap_front" value="0.025"/>
        <xacro:property name="wheel_xoff_front" value="0.12"/>
        <!-- Kamera -->
        <xacro:property name="camera_length" value="0.04"/>
        <xacro:property name="camera_width" value="0.065"/>
        <xacro:property name="camera_height" value="0.025"/>
        <!-- Parktronik -->
        <xacro:property name="park_length" value="0.04"/>
        <xacro:property name="park_width" value="0.1"/>
        <xacro:property name="park_height" value="0.035"/>

    <!-- TSveta dlya rviz -->
        <!-- Telo -->
        <material name="body">
            <color rgba="0.1 0.7 0.25 0.5"/>
        </material>
        <!-- Kolyosa -->
        <material name="wheel">
            <color rgba="0.5 0.5 0.5 1.0"/>
        </material>
        <!-- Osi vrascheniya -->
        <material name="rotation_axis">
            <color rgba="1.0 0 0 1.0"/>
        </material>
        <!-- Lidar -->
        <material name="lidar">
            <color rgba="1.0 1.0 0 1.0"/>
        </material>
        <!-- Kamera -->
        <material name="camera">
            <color rgba="1.0 0 1.0 1.0"/>
        </material>
        <!-- Parktronik -->
        <material name="parking_sensors">
            <color rgba="0 1.0 1.0 1.0"/>
        </material>
    <!-- TSveta i nastroiki dlya gazebo -->
        <!-- Telo -->
        <gazebo reference="body_link">
            <material>Gazebo/Green</material>
        </gazebo>

        <gazebo reference="body_up_link">
            <material>Gazebo/Green</material>
        </gazebo>
        <!-- Kolyosa -->
            <gazebo reference="left_wheel_front_link">
                <material>Gazebo/FlatBlack</material>
                <mu1 value="0.001"/>
                <mu2 value="0.001"/>
            </gazebo>

            <gazebo reference="right_wheel_front_link">
                <material>Gazebo/FlatBlack</material>
                <mu1 value="0.001"/>
                <mu2 value="0.001"/>
            </gazebo>
            
            <gazebo reference="left_wheel_link">
                <material>Gazebo/FlatBlack</material>
            </gazebo>

            <gazebo reference="right_wheel_link">
                <material>Gazebo/FlatBlack</material>
            </gazebo>

        <!-- Lidar -->
            <!-- <gazebo reference="lidar_link">
                <material>Gazebo/Yellow</material>
                <sensor name="laser" type="ray">
                    <pose> 0 0 0 0 0 0 </pose>
                    <visualize>true</visualize>
                    <update_rate>10</update_rate>
                    <ray>
                        <scan>
                            <horizontal>
                                <samples>360</samples>
                                <min_angle>-3.14</min_angle>
                                <max_angle>3.14</max_angle>
                            </horizontal>
                        </scan>
                        <range>
                            <min>0.3</min>
                            <max>12</max>
                        </range>
                    </ray>
                    <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                        <ros>
                            <argument>~/out:=scan</argument>
                        </ros>
                        <output_type>sensor_msgs/LaserScan</output_type>
                        <frame_name>lidar_link</frame_name>
                    </plugin>
                </sensor>
            </gazebo> -->

        <!-- Kamera -->
            <gazebo reference="camera_link">
                <material>Gazebo/Purple</material>
                <sensor name="camera" type="camera">
                    <pose> 0 0 0 0 0 0 </pose>
                    <visualize>true</visualize>
                    <update_rate>10</update_rate>
                    <camera>
                        <horizontal_fov>1.089</horizontal_fov>
                        <image>
                            <format>R8G8B8</format>
                            <width>640</width>
                            <height>480</height>
                        </image>
                        <clip>
                            <near>0.05</near>
                            <far>8.0</far>
                        </clip>
                    </camera>
                    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                        <frame_name>camera_link</frame_name>
                    </plugin>
                </sensor>
            </gazebo>

        <!-- Parktronik -->
        <gazebo reference="park_link">
            <material>Gazebo/Blue</material>
            
        </gazebo>

    <!-- Bazovaya ssilka(hz kak imenno ona rabotaet, no ona tochno ne mozhet yavlyat'sya telom, kak minimum ya ne smog eyo zastavit' rabotat' tak) -->
     
        <link name="base_link">

        </link>
        
        <joint name="base_footprint_joint" type="fixed">
            <parent link="base_link"/>
            <child link="base_footprint"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </joint>
    
        <link name="base_footprint">

        </link>
    <!-- Osnovnoe telo robota -->
        <!-- Nizhnyaya chast'(rama s kolyosami) -->
        <joint name="body_joint" type="fixed">
            <parent link="base_link"/>
            <child link="body_link"/>
            <origin xyz="0 0 ${body_height/2 + wheel_diameter / 2}"/>
        </joint>
        
        <link name="body_link">
            <visual>_
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${body_length} ${body_width} ${body_height}"/>
                </geometry>
                <material name="body"/>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${body_length} ${body_width} ${body_height}"/>
                </geometry>
            </collision>
            <xacro:inertial_box mass="${mass_body / 2}" x="${body_length}" y="${body_width}" z="${body_height}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_box>
        </link>
        
    <!-- Verhnyaya chast'(rama s kolyosami) -->
        <joint name="body_up_joint" type="fixed">
            <parent link="body_link"/>
            <child link="body_up_link"/>
            <origin xyz="${-(body_length - body_up_length)/2} 0 ${body_height/2 + wheel_diameter/2+0.005}"/>
        </joint>
        
        <link name="body_up_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${body_up_length} ${body_up_width} ${body_up_height}"/>
                </geometry>
                <material name="body"/>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${body_up_length} ${body_up_width} ${body_up_height}"/>
                </geometry>
            </collision>
            <xacro:inertial_box mass="${mass_body / 2}" x="${body_up_length}" y="${body_up_width}" z="${body_up_height}">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_box>
        </link>
    <!-- Kolesa -->
        <!-- Makros dlya opredeleniya zadnego kolesa -->
            <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
                <link name="${prefix}_link">
                    <visual>
                        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                        <geometry>
                            <cylinder radius="${wheel_diameter/2}" length="${wheel_width}"/>
                        </geometry>
                        <material name="wheel"/>
                    </visual>
                    <collision>
                        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                        <geometry>
                            <cylinder radius="${wheel_diameter/2}" length="${wheel_width}"/>
                        </geometry>
                    </collision>
                    <xacro:inertial_cylinder mass="${mass_back_wheel}" length="${wheel_width}" radius="${wheel_diameter/2}">
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            </xacro:inertial_cylinder>
                </link>
                <joint name="${prefix}_joint" type="continuous">
                    <parent link="base_link"/>
                    <child link="${prefix}_link"/>
                    <origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(body_width/2+wheel_ygap)} ${wheel_diameter/2}" rpy="0 0 0"/>
                    <axis xyz="0 1 0"/>
                </joint>
            </xacro:macro>
        <!-- Makros dlya opredeleniya perednego kolesa i osi vrascheniya -->
            <xacro:macro name="wheel_small" params="prefix x_reflect y_reflect">
                <link name="${prefix}_link">
                    <visual>
                        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                        <geometry>
                            <cylinder radius="${wheel_diameter_front/2}" length="${wheel_width_front}"/>
                        </geometry>
                        <material name="wheel"/>
                    </visual>
                    <collision>
                        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                        <geometry>
                            <cylinder radius="${wheel_diameter_front/2}" length="${wheel_width_front}"/>
                        </geometry>
                    </collision>
                    <xacro:inertial_cylinder mass="${mass_front_wheel}" length="${wheel_width_front}" radius="${wheel_diameter_front/2}">
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
            </xacro:inertial_cylinder>
                </link>
                <link name="${prefix}_link_to_wheel">
                    <visual>
                        <origin xyz="0 0 0" rpy="0 0 0"/>
                        <geometry>
                            <box size="0.05 0.05 0.01"/>
                        </geometry>
                        <material name="rotation_axis"/>
                    </visual>
                    <collision>
                        <origin xyz="0 0 0" rpy="0 0 0"/>
                        <geometry>
                            <box size="0.05 0.05 0.01"/>
                        </geometry>
                    </collision>
                    <xacro:inertial_box mass="${mass_front_joint}" x="0.05" y="0.05" z="0.01">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_box>
                </link>
                <joint name="${prefix}_joint_wheel" type="fixed">
                    <parent link="body_link"/>
                    <child link="${prefix}_link_to_wheel"/>
                    <origin xyz="${x_reflect*wheel_xoff_front} ${y_reflect} ${-(body_height/2)}" rpy="0 0 0"/>
                    <axis xyz="0 0 1"/>
                </joint>
                <joint name="${prefix}_joint" type="fixed">
                    <parent link="${prefix}_link_to_wheel"/>
                    <child link="${prefix}_link"/>
                    <origin xyz="0 0 ${-(0.01/2+wheel_diameter_front/2)}" rpy="0 0 0"/>
                    <axis xyz="0 1 0"/>
                </joint>
            </xacro:macro>

        <!-- Opredelenie zadnih kolyos -->

        <xacro:wheel_small prefix="left_wheel_front" x_reflect="2.3" y_reflect="0.075" />
        <xacro:wheel_small prefix="right_wheel_front" x_reflect="2.3" y_reflect="-0.075" />

        <!-- Opredelenie perednih kolyos -->

        <xacro:wheel prefix="left_wheel" x_reflect="-2.3" y_reflect="1.05" />
        <xacro:wheel prefix="right_wheel" x_reflect="-2.3" y_reflect="-1.05" />

    <!-- Lidar -->

        <!-- <link name="lidar_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="0.05" length="0.01"/>
                </geometry>
                <material name="lidar"/>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="0.05" length="0.01"/>
                </geometry>
            </collision>
            <xacro:inertial_cylinder mass="0.1" length="0.01" radius="0.05">
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </xacro:inertial_cylinder>
        </link>
        <joint name="lidar_joint" type="fixed">
            <parent link="body_link"/>
            <child link="lidar_link"/>
            <origin xyz="0 0 ${body_up_height+0.001}" rpy="0 0 0"/>
        </joint> -->
    <!-- Kamera -->

        <link name="camera_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${camera_length} ${camera_width} ${camera_height}"/>
                </geometry>
                <material name="camera"/>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${camera_length} ${camera_width} ${camera_height}"/>
                </geometry>
            </collision>
        </link>

        <joint name="camera_joint" type="fixed">
            <parent link="body_up_link"/>
            <child link="camera_link"/>
            <origin xyz="${body_up_length/2 + camera_length/2} 0 ${body_up_height/2 - 0.17}" rpy="0 0 0"/>
        </joint>

    <!-- Parktronik -->

        <link name="park_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${park_length} ${park_width} ${park_height}"/>
                </geometry>
                <material name="parking_sensors"/>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size="${park_length} ${park_width} ${park_height}"/>
                </geometry>
            </collision>
        </link>

        <joint name="park_joint" type="fixed">
            <parent link="body_up_link"/>
            <child link="park_link"/>
            <origin xyz="${body_up_length/2 + park_length/2} 0 ${body_up_height/2 - park_height}" rpy="0 0 0"/>
        </joint>

</robot>